<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cloud.manage.dao.UserDao">
	
	<insert id="add" useGeneratedKeys="true" keyProperty="id">
		insert into t_user (user_name, password, real_name, org_id) values (#{userName}, #{password}, #{realName}, #{orgId})
	</insert>
	
	<select id="findUserByName" parameterType="String" resultType="org.cloud.manage.model.User">
		select t.*, (select name from t_org a where a.id = t.org_id) as org_name from t_user t where t.user_name = #{userName}
	</select>
	
	<select id="findCountByName" parameterType="String" resultType="long">
		select count(1) from t_user t where t.user_name = #{userName}
	</select>
	
	<select id="getPassword" parameterType="long" resultType="String">
		SELECT password FROM t_user where id = #{id}
	</select>
	
	<update id="changePassword">
		update t_user set password = #{password} where id = #{id}
	</update>
	
	<select id="findPage" resultType="org.cloud.manage.model.User" parameterType="org.cloud.manage.model.vo.UserQuery">
		select t.*, (select name from t_org a where a.id = t.org_id) as org_name  from t_user t
		<where>
			<if test="query.userName != null">
				AND t.user_name like CONCAT('%',CONCAT(#{query.userName},'%'))
			</if>
			<if test="query.realName != null">
				AND t.real_name like CONCAT('%',CONCAT(#{query.realName},'%'))
			</if>
			<if test="query.orgId != null">
				AND t.org_id = #{query.orgId}
			</if>	
		</where>
		
		<if test="query.orderByField != null">
			order by ${query.orderByField}
		</if>
	</select>
	
	<select id="findUserById" resultType="org.cloud.manage.model.User" parameterType="long">
		select  t.*, (select name from t_org a where a.id = t.org_id) as org_name  from t_user t where t.id = #{id}
	</select>
	
	<update id="update">
		update t_user
		   set user_name = #{userName},
		       real_name = #{realName},
		       org_id = #{orgId}
		 where id = #{id}
	</update>
	
	<delete id="delete" parameterType="long">
		delete from t_user where id = #{id}
	</delete>
	
	<delete id="removeUserRoleByUserId">
		delete from t_user_role where user_id = #{userId}
	</delete>
	
	<insert id="addUserRole">
		insert into t_user_role
		  (role_id, user_id)
		values
		<foreach collection="roleIds" item="roleId" index="index" separator="," > 
	      (#{roleId}, #{userId})
	    </foreach> 
	</insert>
</mapper>
